package proyectoticoeats;

import capaDatos.ProductoD;
import capaDatos.RestauranteD;
import capaDatos.OrdenD;
import capaDatos.OrdenDetalleD;
import capaLogica.Orden;
import capaLogica.OrdenDetalle;
import capaLogica.Producto;
import capaLogica.Restaurante;
import capaLogica.TipoComida;
import capaLogica.TipoProducto;
import capaLogica.TipoUsuario;
import capaLogica.Usuario;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static proyectoticoeats.frmMantProducto.isNotNullNotEmpty;

/**
 *
 * @author Francisco Arce Chavarria <danielarcesoftware@gmail.com>
 */
public class frmOrden extends javax.swing.JFrame {

    Usuario user = new Usuario();
    ArrayList<Producto> lstProductos = new ArrayList<Producto>();
    ArrayList<OrdenDetalle> lstOrdenDetalle = new ArrayList<OrdenDetalle>();
    Boolean cargaCompleta = false;
    Boolean regresarMenu = true;
    Boolean orderRealizada = false;
    Integer tiempoEstimado = 0;
    DefaultTableModel tblModelProducto = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
        }
    };

    public frmOrden(Usuario user, String tipoComida, String restaurante) {
        initComponents();
        getContentPane().requestFocus();
        this.user = user;
        cargarDatos(tipoComida, restaurante);
        limpiarDatos(false);
        cargaCompleta = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        btnLimpiar4 = new javax.swing.JButton();
        btnGuardar4 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        txtBuscarArticulo = new javax.swing.JTextField();
        lblBuiscarProducto = new javax.swing.JLabel();
        lblProducto = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        lblCantidad = new javax.swing.JLabel();
        btnAgregarArticulo = new javax.swing.JButton();
        btnEliminarArticulo = new javax.swing.JButton();
        cboProductos = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        lblImagenUser = new javax.swing.JLabel();
        lblPerfil = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        lblRestaurante = new javax.swing.JLabel();
        lblTipoRestaurante = new javax.swing.JLabel();
        txtTipoRestaurante = new javax.swing.JTextField();
        txtRestaurante = new javax.swing.JTextField();
        btnSalir4 = new javax.swing.JButton();
        txtSubtotal = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        txtImpuesto = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnRegresarRestaurantes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Orden");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(20, 183, 110));

        btnLimpiar4.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpiar4.setForeground(new java.awt.Color(0, 153, 51));
        btnLimpiar4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/clean.png"))); // NOI18N
        btnLimpiar4.setText("Borrar Orden");
        btnLimpiar4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnLimpiar4.setIconTextGap(3);
        btnLimpiar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiar4ActionPerformed(evt);
            }
        });

        btnGuardar4.setBackground(new java.awt.Color(255, 255, 255));
        btnGuardar4.setForeground(new java.awt.Color(0, 153, 51));
        btnGuardar4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/money.png"))); // NOI18N
        btnGuardar4.setText("Pagar");
        btnGuardar4.setIconTextGap(3);
        btnGuardar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar4ActionPerformed(evt);
            }
        });

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblProductos);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaci√≥n Producto"));

        txtBuscarArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarArticuloKeyReleased(evt);
            }
        });

        lblBuiscarProducto.setText("Buscar Producto");

        lblProducto.setText("Producto");

        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        lblCantidad.setText("Cantidad");

        btnAgregarArticulo.setText("Agregar");
        btnAgregarArticulo.setActionCommand("Eliminar Articulo");
        btnAgregarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarArticuloActionPerformed(evt);
            }
        });

        btnEliminarArticulo.setText("Eliminar");
        btnEliminarArticulo.setEnabled(false);
        btnEliminarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarArticuloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBuscarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBuiscarProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(lblProducto)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cboProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCantidad)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAgregarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(lblCantidad)
                        .addGap(2, 2, 2)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBuiscarProducto)
                            .addComponent(lblProducto))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtBuscarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cboProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnEliminarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnAgregarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(1, 1, 1))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImagenUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/user.png"))); // NOI18N
        jPanel12.add(lblImagenUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, -1, -1));

        lblPerfil.setText("Daniel Arce Chavarria / ADMINISTRADOR");
        lblPerfil.setToolTipText("");
        jPanel12.add(lblPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 13, 330, 10));

        lblRestaurante.setText("Restaurante");
        lblRestaurante.setAlignmentY(0.0F);

        lblTipoRestaurante.setText("Tipo Restaurante");
        lblTipoRestaurante.setAlignmentY(0.0F);

        txtTipoRestaurante.setEnabled(false);

        txtRestaurante.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTipoRestaurante)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTipoRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRestaurante)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblTipoRestaurante, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addComponent(lblRestaurante, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addComponent(txtTipoRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnSalir4.setBackground(new java.awt.Color(255, 255, 255));
        btnSalir4.setForeground(new java.awt.Color(0, 153, 51));
        btnSalir4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/exit.png"))); // NOI18N
        btnSalir4.setText("Salir");
        btnSalir4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSalir4.setIconTextGap(3);
        btnSalir4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalir4ActionPerformed(evt);
            }
        });

        txtSubtotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSubtotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSubtotal.setText("0");
        txtSubtotal.setToolTipText("");
        txtSubtotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtSubtotal.setEnabled(false);

        txtTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotal.setText("0");
        txtTotal.setToolTipText("");
        txtTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotal.setEnabled(false);

        txtImpuesto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtImpuesto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtImpuesto.setText("0");
        txtImpuesto.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtImpuesto.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("SUBTOTAL");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("IMPUESTO");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("TOTAL");

        btnRegresarRestaurantes.setBackground(new java.awt.Color(255, 255, 255));
        btnRegresarRestaurantes.setForeground(new java.awt.Color(0, 153, 51));
        btnRegresarRestaurantes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/edit.png"))); // NOI18N
        btnRegresarRestaurantes.setText("Cambiar Restaurante");
        btnRegresarRestaurantes.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnRegresarRestaurantes.setIconTextGap(3);
        btnRegresarRestaurantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarRestaurantesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(btnSalir4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegresarRestaurantes, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiar4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtImpuesto, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtImpuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir4)
                    .addComponent(btnLimpiar4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegresarRestaurantes))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalir4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalir4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalir4ActionPerformed

    private void btnLimpiar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiar4ActionPerformed
        limpiarDatos(false);
    }//GEN-LAST:event_btnLimpiar4ActionPerformed

    private void btnGuardar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar4ActionPerformed
        try {
            if (tblProductos.getRowCount() <= 0) {
                JOptionPane.showMessageDialog(this, "No hay productos agregados en la lista");
                return;
            }
            this.setVisible(false);
            frmConfirmarOrden ventana = new frmConfirmarOrden(this, txtTotal.getText());
            ventana.setVisible(true);
            ventana.setLocationRelativeTo(null);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnGuardar4ActionPerformed

    public void ordenConfirmada() {
        Orden objOrden = new Orden(txtRestaurante.getText(), user.CORREO_ELECTRONICO, Double.parseDouble(txtSubtotal.getText().toString()), Double.parseDouble(txtImpuesto.getText().toString()), Double.parseDouble(txtTotal.getText().toString()), 0, tiempoEstimado);
        String num_orden = new OrdenD().MantenimientoOrden(0, objOrden);

        int contador_linea = 0;
        for (OrdenDetalle itemOrden : lstOrdenDetalle) {
            contador_linea++;
            itemOrden.setLINEA(contador_linea);
            itemOrden.setFK_ORDEN(Integer.parseInt(num_orden));
            new OrdenDetalleD().MantenimientoOrdenDetalle(0, itemOrden);
            
            if (itemOrden.getTIPO_PRODUCTO() == TipoProducto.Empacados) {
                new OrdenDetalleD().ReducirCantidadOrdenDetalle(txtRestaurante.getText(), itemOrden.getPK_PRODUCTO(), itemOrden.getCANTIDAD());
            }
        }

        limpiarDatos(false);
        JOptionPane.showMessageDialog(this, "Muchas gracias por la compra");
        frmCalificar ventana = new frmCalificar(this.user, num_orden, false);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);
        orderRealizada = true;
        this.dispose();
    }

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        btnEliminarArticulo.setEnabled(true);
    }//GEN-LAST:event_tblProductosMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (!orderRealizada) {
            if (regresarMenu) {
                frmMenu ventana = new frmMenu(user);
                ventana.setVisible(true);
                ventana.setLocationRelativeTo(null);
            } else {
                frmRestaurante ventana = new frmRestaurante(user, txtTipoRestaurante.getText());
                ventana.setVisible(true);
                ventana.setLocationRelativeTo(null);
            }
        }
    }//GEN-LAST:event_formWindowClosed

    private void txtBuscarArticuloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarArticuloKeyReleased
        cargarProductosPorBusqueda(txtBuscarArticulo.getText());
    }//GEN-LAST:event_txtBuscarArticuloKeyReleased

    private void btnAgregarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarArticuloActionPerformed
        if (!validarDatos()) {
            return;
        }
//        tblModelProducto.setRowCount(0);
        int cantidad = Integer.parseInt(txtCantidad.getText());
        Producto objProducto = new ProductoD().ObtenerProductorRestaurante(txtRestaurante.getText(), cboProductos.getSelectedItem().toString());
        String articulo_en_orden = validarExisteProductoEnOrden(objProducto.getCODIGO());
        if (objProducto.getTIPO_PRODUCTO() == TipoProducto.Empacados) {
            if (cantidad > objProducto.getCANTIDAD_DISPONIBLE()) {
                JOptionPane.showMessageDialog(this, "No hay sufiencte existencias, actualmente contamos con " + objProducto.getCANTIDAD_DISPONIBLE() + " unidades disponibles");
                txtCantidad.requestFocus();
                return;
            }
            if (!articulo_en_orden.equals("NO")) {
                if (objProducto.getCANTIDAD_DISPONIBLE() < (Integer.parseInt(articulo_en_orden) + cantidad)) {
                    JOptionPane.showMessageDialog(this, "No hay sufiencte existencias, actualmente contamos con " + objProducto.getCANTIDAD_DISPONIBLE() + " unidades disponibles");
                    txtCantidad.requestFocus();
                    return;
                } else {
                    cantidad += Integer.parseInt(articulo_en_orden);
                }
            }
        }
        double iva = 0;
        double total = 0;
        int tiempo_estimado = 0;
        if (objProducto.getTIPO_PRODUCTO() == TipoProducto.Preparados) {
            iva = (objProducto.getPRECIO() * 0.13);
            tiempo_estimado = objProducto.getTIEMPO_MINIMO_PREPARADO();
        } else {
            double impuesto = objProducto.getIMPUESTO();
            iva = (objProducto.getPRECIO() * (impuesto / 100));
        }
        total = (objProducto.getPRECIO() + iva) * cantidad;
        String[] fila = {objProducto.getCODIGO(), objProducto.getDESCRIPCION(), Integer.toString(cantidad), Double.toString(objProducto.getPRECIO()), Double.toString(iva), (Double.toString(total))};
        OrdenDetalle orden = new OrdenDetalle(objProducto.getCODIGO(), cantidad, objProducto.getPRECIO(), iva, total, tiempo_estimado);
        if (!articulo_en_orden.equals("NO")) {
            eliminarLineasTabla(objProducto.getCODIGO());
        }
        if (objProducto.getTIPO_PRODUCTO() == TipoProducto.Empacados) {
            orden.setTIPO_PRODUCTO(TipoProducto.Empacados);
        }
        lstOrdenDetalle.add(orden);
        tblModelProducto.addRow(fila);
        cargarMontos();
        tblProductos.setModel(tblModelProducto);
        txtCantidad.setText("");
        cboProductos.setSelectedIndex(-1);
    }//GEN-LAST:event_btnAgregarArticuloActionPerformed

    private void btnEliminarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarArticuloActionPerformed
        if (tblProductos.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(this, "No hay productos agregados en la lista");
            txtCantidad.requestFocus();
            return;
        }
        if (tblProductos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un producto de las lista");
            txtCantidad.requestFocus();
            return;
        }
        int row = tblProductos.getSelectedRow();
        String codigo = tblProductos.getModel().getValueAt(row, 0).toString();
        eliminarLineasTabla(codigo);
        cargarMontos();
    }//GEN-LAST:event_btnEliminarArticuloActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        char enter = evt.getKeyChar();
        if (!(Character.isDigit(enter))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void btnRegresarRestaurantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarRestaurantesActionPerformed
        regresarMenu = false;
        this.dispose();
    }//GEN-LAST:event_btnRegresarRestaurantesActionPerformed

    private String validarExisteProductoEnOrden(String articulo) {
        int a = tblProductos.getRowCount();
        int b = tblModelProducto.getRowCount();

        if (tblProductos.getRowCount() > 0) {
            for (int i = tblProductos.getRowCount() - 1; i > -1; i--) {
                if (tblModelProducto.getValueAt(i, 0).toString().equals(articulo)) {
                    return tblProductos.getValueAt(i, 2).toString();
                }
            }
        }
        return "NO";
    }

    private void cargarMontos() {
        if (lstOrdenDetalle == null || lstOrdenDetalle.isEmpty() || lstOrdenDetalle.size() == 0) {
            txtSubtotal.setText("0");
            txtImpuesto.setText("0");
            txtTotal.setText("0");
        } else {
            double subtotal = 0, impuesto = 0, total = 0;
            Integer tiempo = 0;
            for (OrdenDetalle itemOrdenDetalle : lstOrdenDetalle) {
                subtotal += itemOrdenDetalle.getSUBTOTAL();
                impuesto += itemOrdenDetalle.getIMPUESTO();
                total += itemOrdenDetalle.getPRECIO_TOTAL();
                tiempo += itemOrdenDetalle.getTIEMPO_PREPARACION()*itemOrdenDetalle.getCANTIDAD();
            }
            tiempoEstimado = tiempo;
            txtSubtotal.setText(Double.toString(subtotal));
            txtImpuesto.setText(Double.toString(impuesto));
            txtTotal.setText(Double.toString(total));
        }
    }

    private void cargarDatos(String tipoComida, String restaurante) {
        txtTipoRestaurante.setText(tipoComida);
        txtRestaurante.setText(restaurante);
        crearModelo();
        cargarDatosUsuario();
        cargarProductos(restaurante);
    }

    private void cargarDatosUsuario() {
        lblPerfil.setText(user.getNOMBRE() + " / " + user.TIPO_USUARIO.toString().toUpperCase());
    }

    private void crearModelo() {
        tblModelProducto.addColumn("CODIGO");
        tblModelProducto.addColumn("DESCRIPCI√ìN");
        tblModelProducto.addColumn("CANTIDAD");
        tblModelProducto.addColumn("PRECIO");
        tblModelProducto.addColumn("IMPUESTO");
        tblModelProducto.addColumn("TOTAL");
    }

    private void cargarProductos(String restaurante) {
        cboProductos.removeAllItems();
        lstProductos = new ProductoD().ConsultaProductos(restaurante.equals("") ? 0 : 2, "", restaurante);
        if (lstProductos != null && lstProductos.size() > 0) {
            for (Producto objProducto : lstProductos) {
                cboProductos.addItem(objProducto.getDESCRIPCION());
            }
            cboProductos.setSelectedIndex(0);
        } else {
            cboProductos.setSelectedIndex(-1);
        }
    }

    private void cargarProductosPorBusqueda(String busqueda) {
        cboProductos.removeAllItems();
        Boolean existe = false;
        if (lstProductos != null) {
            for (Producto objProducto : lstProductos) {
                if (!isNotNullNotEmpty(busqueda)) {
                    cboProductos.addItem(objProducto.getDESCRIPCION());
                    existe = true;
                } else if (objProducto.getDESCRIPCION().toUpperCase().contains(busqueda.toUpperCase())) {
                    cboProductos.addItem(objProducto.getDESCRIPCION());
                    existe = true;
                }
            }
        }

        if (existe) {
            cboProductos.setSelectedIndex(0);
        }
    }

    private void limpiarDatos(Boolean esSeleccionadoDeTabla) {
        txtBuscarArticulo.setText("");
        txtCantidad.setText("");
        cboProductos.setSelectedIndex(-1);
        eliminarLineasTabla("");
        tblProductos.setModel(tblModelProducto);
        lstOrdenDetalle = new ArrayList<OrdenDetalle>();
        cargarMontos();
    }

    private void eliminarLineasTabla(String articulo) {
        if (tblProductos.getRowCount() > 0) {
            if (isNotNullNotEmpty(articulo)) {
                lstOrdenDetalle.removeIf(producto -> producto.getPK_PRODUCTO().equals(articulo));
                for (int i = tblProductos.getRowCount() - 1; i > -1; i--) {
                    if (tblModelProducto.getValueAt(i, 0).toString().equals(articulo)) {
                        tblModelProducto.removeRow(i);
                    }
                }
            } else {
                if (tblModelProducto.getRowCount() > 0) {
                    lstOrdenDetalle = new ArrayList<OrdenDetalle>();
                    for (int i = tblModelProducto.getRowCount() - 1; i > -1; i--) {
                        tblModelProducto.removeRow(i);
                    }
                }
            }
        }
    }

    private Boolean validarDatos() {
        if (cboProductos.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un producto");
            cboProductos.requestFocus();
            return false;
        }
        if (!isNotNullNotEmpty(txtCantidad.getText())) {
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad");
            txtCantidad.requestFocus();
            return false;
        }
        return true;
    }

    private void habilitarPanelArticulo(Boolean estado) {
        txtBuscarArticulo.setEnabled(estado);
        cboProductos.setEnabled(estado);
        txtCantidad.setEnabled(estado);
        btnAgregarArticulo.setEnabled(estado);
        btnEliminarArticulo.setEnabled(estado);
    }

    public static boolean isNotNullNotEmpty(
            final String string) {
        return string != null && !string.isEmpty() && !string.trim().isEmpty();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmOrden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmOrden(null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarArticulo;
    private javax.swing.JButton btnEliminarArticulo;
    private javax.swing.JButton btnGuardar4;
    private javax.swing.JButton btnLimpiar4;
    private javax.swing.JButton btnRegresarRestaurantes;
    private javax.swing.JButton btnSalir4;
    private javax.swing.JComboBox<String> cboProductos;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblBuiscarProducto;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblImagenUser;
    private javax.swing.JLabel lblPerfil;
    private javax.swing.JLabel lblProducto;
    private javax.swing.JLabel lblRestaurante;
    private javax.swing.JLabel lblTipoRestaurante;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtBuscarArticulo;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtImpuesto;
    private javax.swing.JTextField txtRestaurante;
    private javax.swing.JTextField txtSubtotal;
    private javax.swing.JTextField txtTipoRestaurante;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
